name: Build

on:
  push:
    branches:
      - "main"
    paths-ignore:
      - config/overlays/dev/kustomization.yaml
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:          
      - name: Checkout
        uses: actions/checkout@v3
      - name: "SetUp Go"
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: "SetUp Go cache"
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Build
        run: |
          make test
  publish:
    name: Publish
    needs:
    - build
    runs-on: ubuntu-latest
    outputs:
      imageName: ${{ steps.publish.outputs.image_name }}
      imageSha: ${{ steps.publish.outputs.image_sha }}
    steps:          
      - name: Checkout
        uses: actions/checkout@v3
      - name: SetUp GO
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
      - name: Publish
        id: publish
        run: |
          IMAGE=$(make image/publish -s)
          
          IMAGE_NAME=$(echo $IMAGE | cut -d '@' -f 1)
          IMAGE_SHA=$(echo $IMAGE | cut -d ':' -f 2)
                    
          echo "image_name=$IMAGE_NAME" >> $GITHUB_OUTPUT
          echo "image_sha=$IMAGE_SHA" >> $GITHUB_OUTPUT

  pr:
    name: PR
    needs:
      - publish
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: PR
        env:
          IMAGE_NAME: ${{ needs.publish.outputs.imageName }}
          IMAGE_SHA: ${{ needs.publish.outputs.imageSha }}
        run: |
          echo ""
          echo "image name : ${IMAGE_NAME}"
          echo "image sha  : ${IMAGE_SHA}"
          echo ""

          yq -i 'del(.images[1].newTag)' config/overlays/dev/kustomization.yaml
          yq -i '.images[1].digest = strenv(IMAGE_SHA)' config/overlays/dev/kustomization.yaml
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        env:
          IMAGE_NAME: ${{ needs.publish.outputs.imageName }}
          IMAGE_SHA: ${{ needs.publish.outputs.imageSha }}
        with:
          base: main
          branch: cos-fleetshard-${{ needs.publish.outputs.imageSha }}
          delete-branch: true
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "update cos-fleetshard images to ${IMAGE_NAME}@sha256:${IMAGE_SHA}"
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          title: "chore(kustomize): update cos-fleetshard images to ${IMAGE_NAME}@sha256:${IMAGE_SHA}"
          body: "${IMAGE_NAME}@sha256:${IMAGE_SHA}"
          add-paths: |
            config/overlays/dev/kustomization.yaml

