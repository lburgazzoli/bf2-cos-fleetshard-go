/*
Connector Service Fleet Manager Private APIs

Connector Service Fleet Manager apis that are used by internal services.

API version: 0.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package controlplane

import (
	"encoding/json"
)

// ConnectorDeployment Holds the deployment configuration of a connector
type ConnectorDeployment struct {
	Id       *string                           `json:"id,omitempty"`
	Kind     *string                           `json:"kind,omitempty"`
	Href     *string                           `json:"href,omitempty"`
	Metadata *ConnectorDeploymentAllOfMetadata `json:"metadata,omitempty"`
	Spec     *ConnectorDeploymentSpec          `json:"spec,omitempty"`
	Status   *ConnectorDeploymentStatus        `json:"status,omitempty"`
}

// NewConnectorDeployment instantiates a new ConnectorDeployment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorDeployment() *ConnectorDeployment {
	this := ConnectorDeployment{}
	return &this
}

// NewConnectorDeploymentWithDefaults instantiates a new ConnectorDeployment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorDeploymentWithDefaults() *ConnectorDeployment {
	this := ConnectorDeployment{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ConnectorDeployment) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorDeployment) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ConnectorDeployment) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ConnectorDeployment) SetId(v string) {
	o.Id = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *ConnectorDeployment) GetKind() string {
	if o == nil || isNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorDeployment) GetKindOk() (*string, bool) {
	if o == nil || isNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *ConnectorDeployment) HasKind() bool {
	if o != nil && !isNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *ConnectorDeployment) SetKind(v string) {
	o.Kind = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *ConnectorDeployment) GetHref() string {
	if o == nil || isNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorDeployment) GetHrefOk() (*string, bool) {
	if o == nil || isNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *ConnectorDeployment) HasHref() bool {
	if o != nil && !isNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *ConnectorDeployment) SetHref(v string) {
	o.Href = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ConnectorDeployment) GetMetadata() ConnectorDeploymentAllOfMetadata {
	if o == nil || isNil(o.Metadata) {
		var ret ConnectorDeploymentAllOfMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorDeployment) GetMetadataOk() (*ConnectorDeploymentAllOfMetadata, bool) {
	if o == nil || isNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ConnectorDeployment) HasMetadata() bool {
	if o != nil && !isNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given ConnectorDeploymentAllOfMetadata and assigns it to the Metadata field.
func (o *ConnectorDeployment) SetMetadata(v ConnectorDeploymentAllOfMetadata) {
	o.Metadata = &v
}

// GetSpec returns the Spec field value if set, zero value otherwise.
func (o *ConnectorDeployment) GetSpec() ConnectorDeploymentSpec {
	if o == nil || isNil(o.Spec) {
		var ret ConnectorDeploymentSpec
		return ret
	}
	return *o.Spec
}

// GetSpecOk returns a tuple with the Spec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorDeployment) GetSpecOk() (*ConnectorDeploymentSpec, bool) {
	if o == nil || isNil(o.Spec) {
		return nil, false
	}
	return o.Spec, true
}

// HasSpec returns a boolean if a field has been set.
func (o *ConnectorDeployment) HasSpec() bool {
	if o != nil && !isNil(o.Spec) {
		return true
	}

	return false
}

// SetSpec gets a reference to the given ConnectorDeploymentSpec and assigns it to the Spec field.
func (o *ConnectorDeployment) SetSpec(v ConnectorDeploymentSpec) {
	o.Spec = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ConnectorDeployment) GetStatus() ConnectorDeploymentStatus {
	if o == nil || isNil(o.Status) {
		var ret ConnectorDeploymentStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorDeployment) GetStatusOk() (*ConnectorDeploymentStatus, bool) {
	if o == nil || isNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ConnectorDeployment) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ConnectorDeploymentStatus and assigns it to the Status field.
func (o *ConnectorDeployment) SetStatus(v ConnectorDeploymentStatus) {
	o.Status = &v
}

func (o ConnectorDeployment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !isNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !isNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !isNil(o.Spec) {
		toSerialize["spec"] = o.Spec
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableConnectorDeployment struct {
	value *ConnectorDeployment
	isSet bool
}

func (v NullableConnectorDeployment) Get() *ConnectorDeployment {
	return v.value
}

func (v *NullableConnectorDeployment) Set(val *ConnectorDeployment) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorDeployment) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorDeployment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorDeployment(val *ConnectorDeployment) *NullableConnectorDeployment {
	return &NullableConnectorDeployment{value: val, isSet: true}
}

func (v NullableConnectorDeployment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorDeployment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
