/*
Connector Service Fleet Manager Private APIs

Connector Service Fleet Manager apis that are used by internal services.

API version: 0.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package controlplane

import (
	"encoding/json"
)

// ConnectorClusterStatusOperatorsInner struct for ConnectorClusterStatusOperatorsInner
type ConnectorClusterStatusOperatorsInner struct {
	Operator *ConnectorOperator `json:"operator,omitempty"`
	// the namespace to which the operator has been installed
	Namespace *string `json:"namespace,omitempty"`
	// the status of the operator
	Status *string `json:"status,omitempty"`
}

// NewConnectorClusterStatusOperatorsInner instantiates a new ConnectorClusterStatusOperatorsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorClusterStatusOperatorsInner() *ConnectorClusterStatusOperatorsInner {
	this := ConnectorClusterStatusOperatorsInner{}
	return &this
}

// NewConnectorClusterStatusOperatorsInnerWithDefaults instantiates a new ConnectorClusterStatusOperatorsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorClusterStatusOperatorsInnerWithDefaults() *ConnectorClusterStatusOperatorsInner {
	this := ConnectorClusterStatusOperatorsInner{}
	return &this
}

// GetOperator returns the Operator field value if set, zero value otherwise.
func (o *ConnectorClusterStatusOperatorsInner) GetOperator() ConnectorOperator {
	if o == nil || isNil(o.Operator) {
		var ret ConnectorOperator
		return ret
	}
	return *o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorClusterStatusOperatorsInner) GetOperatorOk() (*ConnectorOperator, bool) {
	if o == nil || isNil(o.Operator) {
		return nil, false
	}
	return o.Operator, true
}

// HasOperator returns a boolean if a field has been set.
func (o *ConnectorClusterStatusOperatorsInner) HasOperator() bool {
	if o != nil && !isNil(o.Operator) {
		return true
	}

	return false
}

// SetOperator gets a reference to the given ConnectorOperator and assigns it to the Operator field.
func (o *ConnectorClusterStatusOperatorsInner) SetOperator(v ConnectorOperator) {
	o.Operator = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *ConnectorClusterStatusOperatorsInner) GetNamespace() string {
	if o == nil || isNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorClusterStatusOperatorsInner) GetNamespaceOk() (*string, bool) {
	if o == nil || isNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *ConnectorClusterStatusOperatorsInner) HasNamespace() bool {
	if o != nil && !isNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *ConnectorClusterStatusOperatorsInner) SetNamespace(v string) {
	o.Namespace = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ConnectorClusterStatusOperatorsInner) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorClusterStatusOperatorsInner) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ConnectorClusterStatusOperatorsInner) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ConnectorClusterStatusOperatorsInner) SetStatus(v string) {
	o.Status = &v
}

func (o ConnectorClusterStatusOperatorsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Operator) {
		toSerialize["operator"] = o.Operator
	}
	if !isNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableConnectorClusterStatusOperatorsInner struct {
	value *ConnectorClusterStatusOperatorsInner
	isSet bool
}

func (v NullableConnectorClusterStatusOperatorsInner) Get() *ConnectorClusterStatusOperatorsInner {
	return v.value
}

func (v *NullableConnectorClusterStatusOperatorsInner) Set(val *ConnectorClusterStatusOperatorsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorClusterStatusOperatorsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorClusterStatusOperatorsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorClusterStatusOperatorsInner(val *ConnectorClusterStatusOperatorsInner) *NullableConnectorClusterStatusOperatorsInner {
	return &NullableConnectorClusterStatusOperatorsInner{value: val, isSet: true}
}

func (v NullableConnectorClusterStatusOperatorsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorClusterStatusOperatorsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
