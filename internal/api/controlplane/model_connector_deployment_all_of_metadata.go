/*
Connector Service Fleet Manager Private APIs

Connector Service Fleet Manager apis that are used by internal services.

API version: 0.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package controlplane

import (
	"encoding/json"
	"time"
)

// ConnectorDeploymentAllOfMetadata struct for ConnectorDeploymentAllOfMetadata
type ConnectorDeploymentAllOfMetadata struct {
	CreatedAt       time.Time `json:"created_at"`
	UpdatedAt       time.Time `json:"updated_at"`
	ResourceVersion int64     `json:"resource_version"`
	ResolvedSecrets bool      `json:"resolved_secrets"`
	// Name-value string annotations for resource
	Annotations *map[string]string `json:"annotations,omitempty"`
}

// NewConnectorDeploymentAllOfMetadata instantiates a new ConnectorDeploymentAllOfMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorDeploymentAllOfMetadata(createdAt time.Time, updatedAt time.Time, resourceVersion int64, resolvedSecrets bool) *ConnectorDeploymentAllOfMetadata {
	this := ConnectorDeploymentAllOfMetadata{}
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.ResourceVersion = resourceVersion
	this.ResolvedSecrets = resolvedSecrets
	return &this
}

// NewConnectorDeploymentAllOfMetadataWithDefaults instantiates a new ConnectorDeploymentAllOfMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorDeploymentAllOfMetadataWithDefaults() *ConnectorDeploymentAllOfMetadata {
	this := ConnectorDeploymentAllOfMetadata{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *ConnectorDeploymentAllOfMetadata) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ConnectorDeploymentAllOfMetadata) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ConnectorDeploymentAllOfMetadata) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ConnectorDeploymentAllOfMetadata) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ConnectorDeploymentAllOfMetadata) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ConnectorDeploymentAllOfMetadata) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetResourceVersion returns the ResourceVersion field value
func (o *ConnectorDeploymentAllOfMetadata) GetResourceVersion() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ResourceVersion
}

// GetResourceVersionOk returns a tuple with the ResourceVersion field value
// and a boolean to check if the value has been set.
func (o *ConnectorDeploymentAllOfMetadata) GetResourceVersionOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceVersion, true
}

// SetResourceVersion sets field value
func (o *ConnectorDeploymentAllOfMetadata) SetResourceVersion(v int64) {
	o.ResourceVersion = v
}

// GetResolvedSecrets returns the ResolvedSecrets field value
func (o *ConnectorDeploymentAllOfMetadata) GetResolvedSecrets() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ResolvedSecrets
}

// GetResolvedSecretsOk returns a tuple with the ResolvedSecrets field value
// and a boolean to check if the value has been set.
func (o *ConnectorDeploymentAllOfMetadata) GetResolvedSecretsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResolvedSecrets, true
}

// SetResolvedSecrets sets field value
func (o *ConnectorDeploymentAllOfMetadata) SetResolvedSecrets(v bool) {
	o.ResolvedSecrets = v
}

// GetAnnotations returns the Annotations field value if set, zero value otherwise.
func (o *ConnectorDeploymentAllOfMetadata) GetAnnotations() map[string]string {
	if o == nil || isNil(o.Annotations) {
		var ret map[string]string
		return ret
	}
	return *o.Annotations
}

// GetAnnotationsOk returns a tuple with the Annotations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorDeploymentAllOfMetadata) GetAnnotationsOk() (*map[string]string, bool) {
	if o == nil || isNil(o.Annotations) {
		return nil, false
	}
	return o.Annotations, true
}

// HasAnnotations returns a boolean if a field has been set.
func (o *ConnectorDeploymentAllOfMetadata) HasAnnotations() bool {
	if o != nil && !isNil(o.Annotations) {
		return true
	}

	return false
}

// SetAnnotations gets a reference to the given map[string]string and assigns it to the Annotations field.
func (o *ConnectorDeploymentAllOfMetadata) SetAnnotations(v map[string]string) {
	o.Annotations = &v
}

func (o ConnectorDeploymentAllOfMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if true {
		toSerialize["resource_version"] = o.ResourceVersion
	}
	if true {
		toSerialize["resolved_secrets"] = o.ResolvedSecrets
	}
	if !isNil(o.Annotations) {
		toSerialize["annotations"] = o.Annotations
	}
	return json.Marshal(toSerialize)
}

type NullableConnectorDeploymentAllOfMetadata struct {
	value *ConnectorDeploymentAllOfMetadata
	isSet bool
}

func (v NullableConnectorDeploymentAllOfMetadata) Get() *ConnectorDeploymentAllOfMetadata {
	return v.value
}

func (v *NullableConnectorDeploymentAllOfMetadata) Set(val *ConnectorDeploymentAllOfMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorDeploymentAllOfMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorDeploymentAllOfMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorDeploymentAllOfMetadata(val *ConnectorDeploymentAllOfMetadata) *NullableConnectorDeploymentAllOfMetadata {
	return &NullableConnectorDeploymentAllOfMetadata{value: val, isSet: true}
}

func (v NullableConnectorDeploymentAllOfMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorDeploymentAllOfMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
