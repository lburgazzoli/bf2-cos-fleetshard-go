/*
Connector Service Fleet Manager Private APIs

Connector Service Fleet Manager apis that are used by internal services.

API version: 0.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package controlplane

import (
	"encoding/json"
)

// ConnectorNamespaceDeploymentAllOf struct for ConnectorNamespaceDeploymentAllOf
type ConnectorNamespaceDeploymentAllOf struct {
	Name      string `json:"name"`
	ClusterId string `json:"cluster_id"`
	// Namespace expiration timestamp in RFC 3339 format
	Expiration *string                  `json:"expiration,omitempty"`
	Tenant     ConnectorNamespaceTenant `json:"tenant"`
	Status     ConnectorNamespaceStatus `json:"status"`
}

// NewConnectorNamespaceDeploymentAllOf instantiates a new ConnectorNamespaceDeploymentAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorNamespaceDeploymentAllOf(name string, clusterId string, tenant ConnectorNamespaceTenant, status ConnectorNamespaceStatus) *ConnectorNamespaceDeploymentAllOf {
	this := ConnectorNamespaceDeploymentAllOf{}
	this.Name = name
	this.ClusterId = clusterId
	this.Tenant = tenant
	this.Status = status
	return &this
}

// NewConnectorNamespaceDeploymentAllOfWithDefaults instantiates a new ConnectorNamespaceDeploymentAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorNamespaceDeploymentAllOfWithDefaults() *ConnectorNamespaceDeploymentAllOf {
	this := ConnectorNamespaceDeploymentAllOf{}
	return &this
}

// GetName returns the Name field value
func (o *ConnectorNamespaceDeploymentAllOf) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ConnectorNamespaceDeploymentAllOf) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ConnectorNamespaceDeploymentAllOf) SetName(v string) {
	o.Name = v
}

// GetClusterId returns the ClusterId field value
func (o *ConnectorNamespaceDeploymentAllOf) GetClusterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value
// and a boolean to check if the value has been set.
func (o *ConnectorNamespaceDeploymentAllOf) GetClusterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterId, true
}

// SetClusterId sets field value
func (o *ConnectorNamespaceDeploymentAllOf) SetClusterId(v string) {
	o.ClusterId = v
}

// GetExpiration returns the Expiration field value if set, zero value otherwise.
func (o *ConnectorNamespaceDeploymentAllOf) GetExpiration() string {
	if o == nil || isNil(o.Expiration) {
		var ret string
		return ret
	}
	return *o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorNamespaceDeploymentAllOf) GetExpirationOk() (*string, bool) {
	if o == nil || isNil(o.Expiration) {
		return nil, false
	}
	return o.Expiration, true
}

// HasExpiration returns a boolean if a field has been set.
func (o *ConnectorNamespaceDeploymentAllOf) HasExpiration() bool {
	if o != nil && !isNil(o.Expiration) {
		return true
	}

	return false
}

// SetExpiration gets a reference to the given string and assigns it to the Expiration field.
func (o *ConnectorNamespaceDeploymentAllOf) SetExpiration(v string) {
	o.Expiration = &v
}

// GetTenant returns the Tenant field value
func (o *ConnectorNamespaceDeploymentAllOf) GetTenant() ConnectorNamespaceTenant {
	if o == nil {
		var ret ConnectorNamespaceTenant
		return ret
	}

	return o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value
// and a boolean to check if the value has been set.
func (o *ConnectorNamespaceDeploymentAllOf) GetTenantOk() (*ConnectorNamespaceTenant, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tenant, true
}

// SetTenant sets field value
func (o *ConnectorNamespaceDeploymentAllOf) SetTenant(v ConnectorNamespaceTenant) {
	o.Tenant = v
}

// GetStatus returns the Status field value
func (o *ConnectorNamespaceDeploymentAllOf) GetStatus() ConnectorNamespaceStatus {
	if o == nil {
		var ret ConnectorNamespaceStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ConnectorNamespaceDeploymentAllOf) GetStatusOk() (*ConnectorNamespaceStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ConnectorNamespaceDeploymentAllOf) SetStatus(v ConnectorNamespaceStatus) {
	o.Status = v
}

func (o ConnectorNamespaceDeploymentAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["cluster_id"] = o.ClusterId
	}
	if !isNil(o.Expiration) {
		toSerialize["expiration"] = o.Expiration
	}
	if true {
		toSerialize["tenant"] = o.Tenant
	}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableConnectorNamespaceDeploymentAllOf struct {
	value *ConnectorNamespaceDeploymentAllOf
	isSet bool
}

func (v NullableConnectorNamespaceDeploymentAllOf) Get() *ConnectorNamespaceDeploymentAllOf {
	return v.value
}

func (v *NullableConnectorNamespaceDeploymentAllOf) Set(val *ConnectorNamespaceDeploymentAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorNamespaceDeploymentAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorNamespaceDeploymentAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorNamespaceDeploymentAllOf(val *ConnectorNamespaceDeploymentAllOf) *NullableConnectorNamespaceDeploymentAllOf {
	return &NullableConnectorNamespaceDeploymentAllOf{value: val, isSet: true}
}

func (v NullableConnectorNamespaceDeploymentAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorNamespaceDeploymentAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
