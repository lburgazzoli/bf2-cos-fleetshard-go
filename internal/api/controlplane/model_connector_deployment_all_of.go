/*
Connector Service Fleet Manager Private APIs

Connector Service Fleet Manager apis that are used by internal services.

API version: 0.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package controlplane

import (
	"encoding/json"
)

// ConnectorDeploymentAllOf struct for ConnectorDeploymentAllOf
type ConnectorDeploymentAllOf struct {
	Metadata *ConnectorDeploymentAllOfMetadata `json:"metadata,omitempty"`
	Spec     *ConnectorDeploymentSpec          `json:"spec,omitempty"`
	Status   *ConnectorDeploymentStatus        `json:"status,omitempty"`
}

// NewConnectorDeploymentAllOf instantiates a new ConnectorDeploymentAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorDeploymentAllOf() *ConnectorDeploymentAllOf {
	this := ConnectorDeploymentAllOf{}
	return &this
}

// NewConnectorDeploymentAllOfWithDefaults instantiates a new ConnectorDeploymentAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorDeploymentAllOfWithDefaults() *ConnectorDeploymentAllOf {
	this := ConnectorDeploymentAllOf{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ConnectorDeploymentAllOf) GetMetadata() ConnectorDeploymentAllOfMetadata {
	if o == nil || isNil(o.Metadata) {
		var ret ConnectorDeploymentAllOfMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorDeploymentAllOf) GetMetadataOk() (*ConnectorDeploymentAllOfMetadata, bool) {
	if o == nil || isNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ConnectorDeploymentAllOf) HasMetadata() bool {
	if o != nil && !isNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given ConnectorDeploymentAllOfMetadata and assigns it to the Metadata field.
func (o *ConnectorDeploymentAllOf) SetMetadata(v ConnectorDeploymentAllOfMetadata) {
	o.Metadata = &v
}

// GetSpec returns the Spec field value if set, zero value otherwise.
func (o *ConnectorDeploymentAllOf) GetSpec() ConnectorDeploymentSpec {
	if o == nil || isNil(o.Spec) {
		var ret ConnectorDeploymentSpec
		return ret
	}
	return *o.Spec
}

// GetSpecOk returns a tuple with the Spec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorDeploymentAllOf) GetSpecOk() (*ConnectorDeploymentSpec, bool) {
	if o == nil || isNil(o.Spec) {
		return nil, false
	}
	return o.Spec, true
}

// HasSpec returns a boolean if a field has been set.
func (o *ConnectorDeploymentAllOf) HasSpec() bool {
	if o != nil && !isNil(o.Spec) {
		return true
	}

	return false
}

// SetSpec gets a reference to the given ConnectorDeploymentSpec and assigns it to the Spec field.
func (o *ConnectorDeploymentAllOf) SetSpec(v ConnectorDeploymentSpec) {
	o.Spec = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ConnectorDeploymentAllOf) GetStatus() ConnectorDeploymentStatus {
	if o == nil || isNil(o.Status) {
		var ret ConnectorDeploymentStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorDeploymentAllOf) GetStatusOk() (*ConnectorDeploymentStatus, bool) {
	if o == nil || isNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ConnectorDeploymentAllOf) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ConnectorDeploymentStatus and assigns it to the Status field.
func (o *ConnectorDeploymentAllOf) SetStatus(v ConnectorDeploymentStatus) {
	o.Status = &v
}

func (o ConnectorDeploymentAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !isNil(o.Spec) {
		toSerialize["spec"] = o.Spec
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableConnectorDeploymentAllOf struct {
	value *ConnectorDeploymentAllOf
	isSet bool
}

func (v NullableConnectorDeploymentAllOf) Get() *ConnectorDeploymentAllOf {
	return v.value
}

func (v *NullableConnectorDeploymentAllOf) Set(val *ConnectorDeploymentAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorDeploymentAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorDeploymentAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorDeploymentAllOf(val *ConnectorDeploymentAllOf) *NullableConnectorDeploymentAllOf {
	return &NullableConnectorDeploymentAllOf{value: val, isSet: true}
}

func (v NullableConnectorDeploymentAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorDeploymentAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
