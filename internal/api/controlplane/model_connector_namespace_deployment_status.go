/*
Connector Service Fleet Manager Private APIs

Connector Service Fleet Manager apis that are used by internal services.

API version: 0.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package controlplane

import (
	"encoding/json"
)

// ConnectorNamespaceDeploymentStatus Schema for the request to update a data plane namespaces' status
type ConnectorNamespaceDeploymentStatus struct {
	Id                 string                  `json:"id"`
	Phase              ConnectorNamespaceState `json:"phase"`
	Version            string                  `json:"version"`
	ConnectorsDeployed int32                   `json:"connectors_deployed"`
	Conditions         []MetaV1Condition       `json:"conditions,omitempty"`
}

// NewConnectorNamespaceDeploymentStatus instantiates a new ConnectorNamespaceDeploymentStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorNamespaceDeploymentStatus(id string, phase ConnectorNamespaceState, version string, connectorsDeployed int32) *ConnectorNamespaceDeploymentStatus {
	this := ConnectorNamespaceDeploymentStatus{}
	this.Id = id
	this.Phase = phase
	this.Version = version
	this.ConnectorsDeployed = connectorsDeployed
	return &this
}

// NewConnectorNamespaceDeploymentStatusWithDefaults instantiates a new ConnectorNamespaceDeploymentStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorNamespaceDeploymentStatusWithDefaults() *ConnectorNamespaceDeploymentStatus {
	this := ConnectorNamespaceDeploymentStatus{}
	return &this
}

// GetId returns the Id field value
func (o *ConnectorNamespaceDeploymentStatus) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ConnectorNamespaceDeploymentStatus) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ConnectorNamespaceDeploymentStatus) SetId(v string) {
	o.Id = v
}

// GetPhase returns the Phase field value
func (o *ConnectorNamespaceDeploymentStatus) GetPhase() ConnectorNamespaceState {
	if o == nil {
		var ret ConnectorNamespaceState
		return ret
	}

	return o.Phase
}

// GetPhaseOk returns a tuple with the Phase field value
// and a boolean to check if the value has been set.
func (o *ConnectorNamespaceDeploymentStatus) GetPhaseOk() (*ConnectorNamespaceState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Phase, true
}

// SetPhase sets field value
func (o *ConnectorNamespaceDeploymentStatus) SetPhase(v ConnectorNamespaceState) {
	o.Phase = v
}

// GetVersion returns the Version field value
func (o *ConnectorNamespaceDeploymentStatus) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *ConnectorNamespaceDeploymentStatus) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *ConnectorNamespaceDeploymentStatus) SetVersion(v string) {
	o.Version = v
}

// GetConnectorsDeployed returns the ConnectorsDeployed field value
func (o *ConnectorNamespaceDeploymentStatus) GetConnectorsDeployed() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ConnectorsDeployed
}

// GetConnectorsDeployedOk returns a tuple with the ConnectorsDeployed field value
// and a boolean to check if the value has been set.
func (o *ConnectorNamespaceDeploymentStatus) GetConnectorsDeployedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectorsDeployed, true
}

// SetConnectorsDeployed sets field value
func (o *ConnectorNamespaceDeploymentStatus) SetConnectorsDeployed(v int32) {
	o.ConnectorsDeployed = v
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *ConnectorNamespaceDeploymentStatus) GetConditions() []MetaV1Condition {
	if o == nil || isNil(o.Conditions) {
		var ret []MetaV1Condition
		return ret
	}
	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorNamespaceDeploymentStatus) GetConditionsOk() ([]MetaV1Condition, bool) {
	if o == nil || isNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *ConnectorNamespaceDeploymentStatus) HasConditions() bool {
	if o != nil && !isNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []MetaV1Condition and assigns it to the Conditions field.
func (o *ConnectorNamespaceDeploymentStatus) SetConditions(v []MetaV1Condition) {
	o.Conditions = v
}

func (o ConnectorNamespaceDeploymentStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["phase"] = o.Phase
	}
	if true {
		toSerialize["version"] = o.Version
	}
	if true {
		toSerialize["connectors_deployed"] = o.ConnectorsDeployed
	}
	if !isNil(o.Conditions) {
		toSerialize["conditions"] = o.Conditions
	}
	return json.Marshal(toSerialize)
}

type NullableConnectorNamespaceDeploymentStatus struct {
	value *ConnectorNamespaceDeploymentStatus
	isSet bool
}

func (v NullableConnectorNamespaceDeploymentStatus) Get() *ConnectorNamespaceDeploymentStatus {
	return v.value
}

func (v *NullableConnectorNamespaceDeploymentStatus) Set(val *ConnectorNamespaceDeploymentStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorNamespaceDeploymentStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorNamespaceDeploymentStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorNamespaceDeploymentStatus(val *ConnectorNamespaceDeploymentStatus) *NullableConnectorNamespaceDeploymentStatus {
	return &NullableConnectorNamespaceDeploymentStatus{value: val, isSet: true}
}

func (v NullableConnectorNamespaceDeploymentStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorNamespaceDeploymentStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
