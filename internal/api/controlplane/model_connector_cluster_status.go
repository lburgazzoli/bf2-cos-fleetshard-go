/*
Connector Service Fleet Manager Private APIs

Connector Service Fleet Manager apis that are used by internal services.

API version: 0.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package controlplane

import (
	"encoding/json"
)

// ConnectorClusterStatus Schema for the request to update a data plane cluster's status
type ConnectorClusterStatus struct {
	Phase      *ConnectorClusterState    `json:"phase,omitempty"`
	Version    *string                   `json:"version,omitempty"`
	Conditions []MetaV1Condition         `json:"conditions,omitempty"`
	Platform   *ConnectorClusterPlatform `json:"platform,omitempty"`
	// the list of installed operators
	Operators  []ConnectorClusterStatusOperatorsInner `json:"operators,omitempty"`
	Namespaces []ConnectorNamespaceDeploymentStatus   `json:"namespaces,omitempty"`
}

// NewConnectorClusterStatus instantiates a new ConnectorClusterStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorClusterStatus() *ConnectorClusterStatus {
	this := ConnectorClusterStatus{}
	return &this
}

// NewConnectorClusterStatusWithDefaults instantiates a new ConnectorClusterStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorClusterStatusWithDefaults() *ConnectorClusterStatus {
	this := ConnectorClusterStatus{}
	return &this
}

// GetPhase returns the Phase field value if set, zero value otherwise.
func (o *ConnectorClusterStatus) GetPhase() ConnectorClusterState {
	if o == nil || isNil(o.Phase) {
		var ret ConnectorClusterState
		return ret
	}
	return *o.Phase
}

// GetPhaseOk returns a tuple with the Phase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorClusterStatus) GetPhaseOk() (*ConnectorClusterState, bool) {
	if o == nil || isNil(o.Phase) {
		return nil, false
	}
	return o.Phase, true
}

// HasPhase returns a boolean if a field has been set.
func (o *ConnectorClusterStatus) HasPhase() bool {
	if o != nil && !isNil(o.Phase) {
		return true
	}

	return false
}

// SetPhase gets a reference to the given ConnectorClusterState and assigns it to the Phase field.
func (o *ConnectorClusterStatus) SetPhase(v ConnectorClusterState) {
	o.Phase = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ConnectorClusterStatus) GetVersion() string {
	if o == nil || isNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorClusterStatus) GetVersionOk() (*string, bool) {
	if o == nil || isNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ConnectorClusterStatus) HasVersion() bool {
	if o != nil && !isNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ConnectorClusterStatus) SetVersion(v string) {
	o.Version = &v
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *ConnectorClusterStatus) GetConditions() []MetaV1Condition {
	if o == nil || isNil(o.Conditions) {
		var ret []MetaV1Condition
		return ret
	}
	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorClusterStatus) GetConditionsOk() ([]MetaV1Condition, bool) {
	if o == nil || isNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *ConnectorClusterStatus) HasConditions() bool {
	if o != nil && !isNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []MetaV1Condition and assigns it to the Conditions field.
func (o *ConnectorClusterStatus) SetConditions(v []MetaV1Condition) {
	o.Conditions = v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *ConnectorClusterStatus) GetPlatform() ConnectorClusterPlatform {
	if o == nil || isNil(o.Platform) {
		var ret ConnectorClusterPlatform
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorClusterStatus) GetPlatformOk() (*ConnectorClusterPlatform, bool) {
	if o == nil || isNil(o.Platform) {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *ConnectorClusterStatus) HasPlatform() bool {
	if o != nil && !isNil(o.Platform) {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given ConnectorClusterPlatform and assigns it to the Platform field.
func (o *ConnectorClusterStatus) SetPlatform(v ConnectorClusterPlatform) {
	o.Platform = &v
}

// GetOperators returns the Operators field value if set, zero value otherwise.
func (o *ConnectorClusterStatus) GetOperators() []ConnectorClusterStatusOperatorsInner {
	if o == nil || isNil(o.Operators) {
		var ret []ConnectorClusterStatusOperatorsInner
		return ret
	}
	return o.Operators
}

// GetOperatorsOk returns a tuple with the Operators field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorClusterStatus) GetOperatorsOk() ([]ConnectorClusterStatusOperatorsInner, bool) {
	if o == nil || isNil(o.Operators) {
		return nil, false
	}
	return o.Operators, true
}

// HasOperators returns a boolean if a field has been set.
func (o *ConnectorClusterStatus) HasOperators() bool {
	if o != nil && !isNil(o.Operators) {
		return true
	}

	return false
}

// SetOperators gets a reference to the given []ConnectorClusterStatusOperatorsInner and assigns it to the Operators field.
func (o *ConnectorClusterStatus) SetOperators(v []ConnectorClusterStatusOperatorsInner) {
	o.Operators = v
}

// GetNamespaces returns the Namespaces field value if set, zero value otherwise.
func (o *ConnectorClusterStatus) GetNamespaces() []ConnectorNamespaceDeploymentStatus {
	if o == nil || isNil(o.Namespaces) {
		var ret []ConnectorNamespaceDeploymentStatus
		return ret
	}
	return o.Namespaces
}

// GetNamespacesOk returns a tuple with the Namespaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorClusterStatus) GetNamespacesOk() ([]ConnectorNamespaceDeploymentStatus, bool) {
	if o == nil || isNil(o.Namespaces) {
		return nil, false
	}
	return o.Namespaces, true
}

// HasNamespaces returns a boolean if a field has been set.
func (o *ConnectorClusterStatus) HasNamespaces() bool {
	if o != nil && !isNil(o.Namespaces) {
		return true
	}

	return false
}

// SetNamespaces gets a reference to the given []ConnectorNamespaceDeploymentStatus and assigns it to the Namespaces field.
func (o *ConnectorClusterStatus) SetNamespaces(v []ConnectorNamespaceDeploymentStatus) {
	o.Namespaces = v
}

func (o ConnectorClusterStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Phase) {
		toSerialize["phase"] = o.Phase
	}
	if !isNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !isNil(o.Conditions) {
		toSerialize["conditions"] = o.Conditions
	}
	if !isNil(o.Platform) {
		toSerialize["platform"] = o.Platform
	}
	if !isNil(o.Operators) {
		toSerialize["operators"] = o.Operators
	}
	if !isNil(o.Namespaces) {
		toSerialize["namespaces"] = o.Namespaces
	}
	return json.Marshal(toSerialize)
}

type NullableConnectorClusterStatus struct {
	value *ConnectorClusterStatus
	isSet bool
}

func (v NullableConnectorClusterStatus) Get() *ConnectorClusterStatus {
	return v.value
}

func (v *NullableConnectorClusterStatus) Set(val *ConnectorClusterStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorClusterStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorClusterStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorClusterStatus(val *ConnectorClusterStatus) *NullableConnectorClusterStatus {
	return &NullableConnectorClusterStatus{value: val, isSet: true}
}

func (v NullableConnectorClusterStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorClusterStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
