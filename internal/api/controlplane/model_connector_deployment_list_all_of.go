/*
Connector Service Fleet Manager Private APIs

Connector Service Fleet Manager apis that are used by internal services.

API version: 0.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package controlplane

import (
	"encoding/json"
)

// ConnectorDeploymentListAllOf struct for ConnectorDeploymentListAllOf
type ConnectorDeploymentListAllOf struct {
	Items []ConnectorDeployment `json:"items,omitempty"`
}

// NewConnectorDeploymentListAllOf instantiates a new ConnectorDeploymentListAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorDeploymentListAllOf() *ConnectorDeploymentListAllOf {
	this := ConnectorDeploymentListAllOf{}
	return &this
}

// NewConnectorDeploymentListAllOfWithDefaults instantiates a new ConnectorDeploymentListAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorDeploymentListAllOfWithDefaults() *ConnectorDeploymentListAllOf {
	this := ConnectorDeploymentListAllOf{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ConnectorDeploymentListAllOf) GetItems() []ConnectorDeployment {
	if o == nil || isNil(o.Items) {
		var ret []ConnectorDeployment
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorDeploymentListAllOf) GetItemsOk() ([]ConnectorDeployment, bool) {
	if o == nil || isNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ConnectorDeploymentListAllOf) HasItems() bool {
	if o != nil && !isNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []ConnectorDeployment and assigns it to the Items field.
func (o *ConnectorDeploymentListAllOf) SetItems(v []ConnectorDeployment) {
	o.Items = v
}

func (o ConnectorDeploymentListAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableConnectorDeploymentListAllOf struct {
	value *ConnectorDeploymentListAllOf
	isSet bool
}

func (v NullableConnectorDeploymentListAllOf) Get() *ConnectorDeploymentListAllOf {
	return v.value
}

func (v *NullableConnectorDeploymentListAllOf) Set(val *ConnectorDeploymentListAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorDeploymentListAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorDeploymentListAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorDeploymentListAllOf(val *ConnectorDeploymentListAllOf) *NullableConnectorDeploymentListAllOf {
	return &NullableConnectorDeploymentListAllOf{value: val, isSet: true}
}

func (v NullableConnectorDeploymentListAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorDeploymentListAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
